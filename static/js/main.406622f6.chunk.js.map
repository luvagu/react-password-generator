{"version":3,"sources":["helpers/password.checker.js","App.jsx","helpers/password.generator.js","index.jsx"],"names":["checkPasswordStrength","password","weaknesses","push","length","checkPasswordLength","checkMinCharacterType","checkLowercaseCharacters","checkUppercaseCharacters","checkNumberCharacters","checkSymbolCharacters","match","checkRepeatCharacters","strength","forEach","weakness","message","strenghtCalculator","regex","matches","App","useState","numOfChars","setNumOfChars","displayPassword","setDisplayPassword","options","setOptions","isCopied","setIsCopied","isGenerated","setIsGenerated","paswordStrength","setPaswordStrength","passwordMeter","useRef","handleChage","e","prevOptions","target","id","checked","useEffect","current","style","setProperty","className","ref","onSubmit","preventDefault","includeUppercase","includeNumbers","includeSymbols","getAsciiCharacters","from","to","codes","i","LowerCaseCodes","UpperCaseCodes","NumbersCodes","SymbolsCodes","passwordCharCodes","String","fromCharCode","Math","floor","random","join","generatePassword","uppercase","numbers","symbols","htmlFor","type","min","max","value","onChange","parseInt","onClick","navigator","clipboard","writeText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.406622f6.chunk.js","sourcesContent":["export default function checkPasswordStrength(password) {\r\n\tconst weaknesses = []\r\n\tweaknesses.push(\r\n\t\tcheckPasswordLength(password),\r\n\t\tcheckLowercaseCharacters(password),\r\n\t\tcheckUppercaseCharacters(password),\r\n\t\tcheckNumberCharacters(password),\r\n\t\tcheckSymbolCharacters(password),\r\n\t\tcheckRepeatCharacters(password)\r\n\t)\r\n\treturn strenghtCalculator(weaknesses)\r\n}\r\n\r\nfunction strenghtCalculator(weaknesses) {\r\n\tlet strength = 100\r\n\tweaknesses.forEach(weakness => (strength -= weakness))\r\n\r\n\tif (strength >= 80) {\r\n\t\treturn {\r\n\t\t\tmessage: 'Very Strong',\r\n\t\t\tstrength,\r\n\t\t}\r\n\t}\r\n\r\n\tif (strength >= 60 && strength < 80) {\r\n\t\treturn {\r\n\t\t\tmessage: 'Strong',\r\n\t\t\tstrength,\r\n\t\t}\r\n\t}\r\n\r\n\tif (strength >= 40 && strength < 60) {\r\n\t\treturn {\r\n\t\t\tmessage: 'OK',\r\n\t\t\tstrength,\r\n\t\t}\r\n\t}\r\n\r\n\tif (strength >= 20 && strength < 40) {\r\n\t\treturn {\r\n\t\t\tmessage: 'Weak',\r\n\t\t\tstrength,\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tmessage: 'Very Weak',\r\n\t\tstrength,\r\n\t}\r\n}\r\n\r\n// password length\r\nfunction checkPasswordLength(password) {\r\n\tif (password.length <= 5) {\r\n\t\treturn 40\r\n\t}\r\n\r\n\tif (password.length <= 10) {\r\n\t\treturn 15\r\n\t}\r\n\r\n\treturn 0\r\n}\r\n\r\n// 2 min lowercase characters\r\nfunction checkLowercaseCharacters(password) {\r\n\treturn checkMinCharacterType(password, /[a-z]/g)\r\n}\r\n\r\n// 2 min uppercase characters\r\nfunction checkUppercaseCharacters(password) {\r\n\treturn checkMinCharacterType(password, /[A-Z]/g)\r\n}\r\n\r\n// some number characters\r\nfunction checkNumberCharacters(password) {\r\n\treturn checkMinCharacterType(password, /[0-9]/g)\r\n}\r\n\r\n// some symbol characters\r\nfunction checkSymbolCharacters(password) {\r\n\treturn checkMinCharacterType(password, /[^a-zA-Z0-9\\s]/g)\r\n}\r\n\r\nfunction checkMinCharacterType(password, regex) {\r\n\tconst matches = password.match(regex) || []\r\n\r\n\tif (matches.length === 0) {\r\n\t\treturn 20\r\n\t}\r\n\r\n\tif (matches.length <= 2) {\r\n\t\treturn 5\r\n\t}\r\n\r\n\treturn 0\r\n}\r\n\r\n// no consecutive repeat characters\r\nfunction checkRepeatCharacters(password) {\r\n\tconst matches = password.match(/(.)\\1/g) || []\r\n\r\n\tif (matches.length > 0) {\r\n\t\treturn 10\r\n\t}\r\n\r\n\treturn 0\r\n}\r\n","import { useEffect, useRef, useState } from 'react'\nimport { checkPasswordStrength, generatePassword } from './helpers'\n\nfunction App() {\n\tconst [numOfChars, setNumOfChars] = useState(10)\n\tconst [displayPassword, setDisplayPassword] = useState('password')\n\tconst [options, setOptions] = useState({})\n\tconst [isCopied, setIsCopied] = useState(false)\n\tconst [isGenerated, setIsGenerated] = useState(false)\n\tconst [paswordStrength, setPaswordStrength] = useState(\n\t\tcheckPasswordStrength(displayPassword)\n\t)\n\n\tconst passwordMeter = useRef()\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault()\n\n\t\tsetIsGenerated(true)\n\t\tsetIsCopied(false)\n\n\t\tconst password = generatePassword(\n\t\t\tnumOfChars,\n\t\t\toptions.uppercase,\n\t\t\toptions.numbers,\n\t\t\toptions.symbols\n\t\t)\n\n\t\tsetDisplayPassword(password)\n\t}\n\n\tconst handleChage = e => {\n\t\tsetOptions(prevOptions => ({\n\t\t\t...prevOptions,\n\t\t\t[e.target.id]: e.target.checked,\n\t\t}))\n\t}\n\n\tconst copyToClipboard = () => {\n\t\tnavigator.clipboard.writeText(displayPassword)\n\t\tsetIsCopied(true)\n\t}\n\n\tuseEffect(() => {\n\t\tpasswordMeter.current.style.setProperty(\n\t\t\t'--strength',\n\t\t\tpaswordStrength.strength\n\t\t)\n\t}, [paswordStrength])\n\n\tuseEffect(() => {\n\t\tsetPaswordStrength(checkPasswordStrength(displayPassword))\n\t}, [displayPassword])\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<h1 className='title'>Password Generator</h1>\n\t\t\t<h3 className='display-password'>{displayPassword}</h3>\n\t\t\t{paswordStrength && (\n\t\t\t\t<div ref={passwordMeter} className='password-meter'>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{paswordStrength.message} ({paswordStrength.strength}/100)\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<form className='form-fields' onSubmit={handleSubmit}>\n\t\t\t\t<label htmlFor='rangeNumber'>Number of Characters:</label>\n\t\t\t\t<div className='input-range-number'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='range'\n\t\t\t\t\t\tid='rangeNumber'\n\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\tmax='50'\n\t\t\t\t\t\tvalue={numOfChars}\n\t\t\t\t\t\tonChange={e => setNumOfChars(parseInt(e.target.value))}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tid='rangeNumber'\n\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\tmax='50'\n\t\t\t\t\t\tvalue={numOfChars}\n\t\t\t\t\t\tonChange={e => setNumOfChars(parseInt(e.target.value))}\n\t\t\t\t\t\tclassName='number-input'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<label htmlFor='uppercase'>Include Uppercase</label>\n\t\t\t\t<input type='checkbox' id='uppercase' onChange={handleChage} />\n\t\t\t\t<label htmlFor='numbers'>Include Numbers</label>\n\t\t\t\t<input type='checkbox' id='numbers' onChange={handleChage} />\n\t\t\t\t<label htmlFor='symbols'>Include Symbols</label>\n\t\t\t\t<input type='checkbox' id='symbols' onChange={handleChage} />\n\t\t\t\t<button type='submit' className='btn'>\n\t\t\t\t\tGenerate Secure Password 🔒\n\t\t\t\t</button>\n\t\t\t\t{isGenerated && (\n\t\t\t\t\t<button type='button' className='btn' onClick={copyToClipboard}>\n\t\t\t\t\t\t{isCopied ? 'Copied ✔️' : 'Copy Password To Clipboard 📋'}\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default App\n","export default function generatePassword(\r\n\tnumOfChars = 8,\r\n\tincludeUppercase = false,\r\n\tincludeNumbers = false,\r\n\tincludeSymbols = false\r\n) {\r\n\t// ASCII Character Codes Arrays\r\n\t// source: https://www.petefreitag.com/cheatsheets/ascii-codes/\r\n\tconst getAsciiCharacters = (from, to) => {\r\n\t\tconst codes = []\r\n\t\tfor (let i = from; i <= to; i++) {\r\n\t\t\tcodes.push(i)\r\n\t\t}\r\n\t\treturn codes\r\n\t}\r\n\r\n\tconst LowerCaseCodes = getAsciiCharacters(97, 122)\r\n\tconst UpperCaseCodes = getAsciiCharacters(65, 90)\r\n\tconst NumbersCodes = getAsciiCharacters(48, 57)\r\n\tconst SymbolsCodes = [\r\n\t\t...getAsciiCharacters(33, 47),\r\n\t\t...getAsciiCharacters(58, 64),\r\n\t\t...getAsciiCharacters(91, 96),\r\n\t\t...getAsciiCharacters(123, 126),\r\n\t]\r\n\r\n\tlet passwordCharCodes = LowerCaseCodes\r\n\r\n\tif (includeUppercase)\r\n\t\tpasswordCharCodes = [...passwordCharCodes, ...UpperCaseCodes]\r\n\tif (includeNumbers)\r\n\t\tpasswordCharCodes = [...passwordCharCodes, ...NumbersCodes]\r\n\tif (includeSymbols)\r\n\t\tpasswordCharCodes = [...passwordCharCodes, ...SymbolsCodes]\r\n\r\n\tconst password = []\r\n\r\n\tfor (let i = 0; i < numOfChars; i++) {\r\n\t\tpassword.push(\r\n\t\t\tString.fromCharCode(\r\n\t\t\t\tpasswordCharCodes[Math.floor(Math.random() * passwordCharCodes.length)]\r\n\t\t\t)\r\n\t\t)\r\n\t}\r\n\r\n\treturn password.join('')\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}